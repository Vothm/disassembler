00001000 Starting Address
Assembler used: EASy68K Editor/Assembler v5.16.01
Created On: 12/15/2021 6:38:23 PM

00000000                             1  *-----------------------------------------------------------------
00000000                             2  * Title      : 68K Disassembler
00000000                             3  * Written by : Vince Maranan
00000000                             4  * Description: CSS422 Final Project
00000000                             5  *-----------------------------------------------------------------
00000000                             6  
00000000  =0000A000                  7  stack       EQU     $A000               * Stack Address
00000000  =00000004                  8  shift4bits  EQU     4                   * Shift 4 bits
00000000  =00000008                  9  shift8bits  EQU     8                   * Shift 8 bits 
00000000  =0000000C                 10  shift12bits EQU     12                  * Shift 12 bits
00000000  =00000014                 11  printCount  EQU     20                  * Amount of lines to display to console at once
00000000  =0000000D                 12  CR          EQU     $0D                 
00000000  =0000000A                 13  LF          EQU     $0A                 
00000000                            14  
00001000                            15              ORG     $1000
00001000                            16              
00001000  6100 0050                 17  start:      BSR     show                ; Show beginning message
00001004  6100 0074                 18              BSR     CLEARALL             
00001008  4FF9 0000A000             19              LEA     stack,SP                ;Load stack pointer       
0000100E  45F9 000040CA             20              LEA     message_buffer,A2       ;A2 is the message buffer
00001014  2C4A                      21              MOVEA.L A2,A6               
00001016                            22      
00001016  6100 0086                 23  in_start    BSR     INPUT
0000101A  6100 017C                 24              BSR     buffPrep
0000101E  103C 0001                 25              MOVE.B  #1,D0
00001022  43F9 00004088             26              LEA     str_more,A1
00001028  3239 000040B6             27              MOVE.W  strMore_len,D1
0000102E  4E4F                      28              TRAP    #15
00001030  103C 0002                 29              MOVE.B  #2,D0
00001034  4E4F                      30              TRAP    #15
00001036  1611                      31              MOVE.B  (A1),D3     
00001038  12FC 0057                 32              MOVE.B  #'W',(A1)+  
0000103C  12BC 0075                 33              MOVE.B  #'u',(A1)  
00001040  B63C 0031                 34              CMP.B   #$31,D3    
00001044  67BA                      35              BEQ     start
00001046  67B8                      36              BEQ     start
00001048  6100 001C                 37              BSR     program_done
0000104C  4EF9 000040CC             38              JMP     end
00001052                            39          
00001052                            40  ;Utility functions (Printing, clearning, checking addresses)
00001052                            41  
00001052  103C 000D                 42  show        MOVE.B  #13,D0
00001056  43F9 00004000             43              LEA     intro,A1
0000105C  3239 00004034             44              MOVE.W  intro_len,D1
00001062  4E4F                      45              TRAP    #15
00001064  4E75                      46              RTS
00001066                            47  
00001066  103C 0001                 48  program_done  MOVE.B  #1,D0
0000106A  43F9 000040B8             49              LEA     exit,A1
00001070  3239 000040C8             50              MOVE.W  exit_len,D1
00001076  4E4F                      51              TRAP    #15
00001078  4E75                      52              RTS        
0000107A                            53  
0000107A  4240                      54  CLEARALL    CLR     D0
0000107C  4241                      55              CLR     D1
0000107E  4242                      56              CLR     D2
00001080  4243                      57              CLR     D3
00001082  4244                      58              CLR     D4
00001084  4245                      59              CLR     D5
00001086  4246                      60              CLR     D6
00001088  4247                      61              CLR     D7
0000108A  4E75                      62              RTS
0000108C                            63                        
0000108C  4280                      64  CLEARREGISTERS     CLR.L   D0                 
0000108E  4281                      65              CLR.L   D1
00001090  4282                      66              CLR.L   D2
00001092  4283                      67              CLR.L   D3
00001094  4284                      68              CLR.L   D4
00001096  4286                      69              CLR.L   D6
00001098  4287                      70              CLR.L   D7
0000109A  4E75                      71              RTS
0000109C                            72    
0000109C  4E75                      73  EndUtil      RTS
0000109E                            74  
0000109E                            75  INPUT:      ; Handle inputs
0000109E  103C 0001                 76              MOVE.B  #1,D0
000010A2  43F9 00004036             77              LEA     string1,A1
000010A8  3239 0000404E             78              MOVE.W  str_len1,D1         
000010AE  4E4F                      79              TRAP    #15
000010B0  D3FC 0000404E             80              ADDA.L  #str_len1,A1         
000010B6  103C 0002                 81              MOVE.B  #2,D0      
000010BA  4E4F                      82              TRAP    #15
000010BC  4EB9 00001100             83              JSR     asciiToHex           
000010C2  BA3C 0000                 84              CMP.B   #$00,D5
000010C6  6700 0036                 85              BEQ     endInput            
000010CA  2848                      86              MOVEA.L A0,A4         
000010CC  103C 0001                 87              MOVE.B  #1,D0
000010D0  43F9 00004050             88              LEA     string2,A1
000010D6  3239 00004066             89              MOVE.W  str_len2,D1         
000010DC  4E4F                      90              TRAP    #15         
000010DE  D3FC 00004066             91              ADDA.L  #str_len2,A1
000010E4  103C 0002                 92              MOVE.B  #2,D0
000010E8  4E4F                      93              TRAP    #15
000010EA  4EB9 00001100             94              JSR     asciiToHex
000010F0  BA3C 0000                 95              CMP.B   #$00,D5
000010F4  6700 0008                 96              BEQ          endInput           
000010F8  264C                      97              MOVEA.L A4,A3               
000010FA  2848                      98              MOVEA.L A0,A4               
000010FC  204B                      99              MOVEA.L A3,A0        
000010FE                           100                      
000010FE  4E75                     101  endInput    RTS
00001100                           102  
00001100                           103  ; Take D3 (user input) and put the converted ascii to hex on A4
00001100                           104  asciiToHex
00001100  48E7 F800                105              MOVEM.L D0-D4,-(SP)         
00001104  1A3C 0001                106              MOVE.B  #1,D5        
00001108  4EB8 108C                107              JSR     CLEARREGISTERS
0000110C  3C3C 0000                108              MOVE    #0,D6      
00001110                           109        
00001110  1619                     110  cleanup     MOVE.B  (A1)+,D3            
00001112  B63C 0030                111              CMP.B   #$30,D3             
00001116  6D00 0068                112              BLT     finish      
0000111A  B63C 003A                113              CMP.B   #$3A,D3             
0000111E  6D00 0042                114              BLT     num_to_hex      
00001122  B63C 0041                115              CMP.B   #$41,D3             
00001126  6D00 0058                116              BLT     finish      
0000112A  B63C 0047                117              CMP.B   #$47,D3             
0000112E  6D00 003C                118              BLT     cap_to_hex
00001132  B63C 0061                119              CMP.B   #$61,D3             
00001136  6D00 0048                120              BLT     finish      
0000113A  B63C 0067                121              CMP.B   #$67,D3             
0000113E  6D00 0036                122              BLT     lower_to_hex
00001142  B63C 0066                123              CMP.B   #$66,D3             
00001146  6E00 0038                124              BGT     finish      
0000114A                           125        
0000114A  5246                     126  resume      ADD     #1,D6               
0000114C  BC7C 0006                127              CMP     #6,D6               
00001150  6700 002E                128              BEQ     finish      
00001154  0C11 0000                129              CMP.B   #$00,(A1)          
00001158  6700 0026                130              BEQ     finish      
0000115C  E984                     131              ASL.L   #4,D4                         
0000115E  4EF8 1110                132              JMP     cleanup               
00001162                           133  
00001162  0403 0030                134  num_to_hex  SUBI.B  #$30,D3             
00001166  D803                     135              ADD.B   D3,D4               
00001168  4EF8 114A                136              JMP     resume              
0000116C                           137  
0000116C  0403 0037                138  cap_to_hex  SUBI.B  #$37,D3             
00001170  D803                     139              ADD.B   D3,D4               
00001172  4EF8 114A                140              JMP     resume              
00001176                           141  
00001176                           142  lower_to_hex
00001176  0403 0057                143              SUBI.B  #$57,D3             
0000117A  D803                     144              ADD.B   D3,D4               
0000117C  4EF8 114A                145              JMP     resume              
00001180                           146  
00001180  2044                     147  finish      MOVE.L  D4,A0
00001182  4246                     148              CLR     D6                  
00001184  4CDF 001F                149              MOVEM.L (SP)+,D0-D4             
00001188  4E75                     150              RTS                         
0000118A                           151          
0000118A  224A                     152  FILL_ADDRESS: MOVEA.L  A2,A1              
0000118C  4EB9 00001806            153                JSR getLong
00001192  14FC 0009                154                MOVE.B   #$09,(A2)+                                   
00001196  4E75                     155                RTS
00001198                           156           
00001198                           157  ; Print stuff in the buffer
00001198  244E                     158  buffPrep    MOVEA.L A6,A2         
0000119A  61EE                     159              BSR FILL_ADDRESS
0000119C  4EB9 000011DE            160              JSR     opDecode
000011A2  14BC 0000                161              MOVE.B  #00,(A2)            
000011A6  103C 000D                162              MOVE.B  #13,D0
000011AA  4E4F                     163              TRAP    #15                 
000011AC                           164                                
000011AC  B9C8                     165              CMPA.L   A0,A4              
000011AE  6F00 002C                166              BLE      endBuff
000011B2                           167              
000011B2  5247                     168              ADDI    #1,D7              
000011B4  BE7C 0014                169              CMP     #printCount,D7
000011B8  66DE                     170              BNE     buffPrep
000011BA                           171              
000011BA  103C 0001                172              MOVE.B  #1,D0
000011BE  43F9 00004068            173              LEA     str_enter,A1
000011C4  3239 00004086            174              MOVE.W  str_en_len,D1
000011CA  4E4F                     175              TRAP    #15
000011CC                           176              
000011CC  103C 0002                177              MOVE.B  #2,D0
000011D0  4E4F                     178              TRAP    #15
000011D2                           179              
000011D2  12BC 0050                180              MOVE.B  #$50,(A1)
000011D6                           181              
000011D6  4247                     182              CLR     D7                
000011D8  4EF8 1198                183              JMP     buffPrep
000011DC                           184              
000011DC  4E75                     185  endBuff     RTS         
000011DE                           186            
000011DE  48E7 FB0E                187  opDecode    MOVEM.L A4-A6/D0-D4/D6-D7,-(SP)     
000011E2  4EB8 108C                188              JSR     CLEARREGISTERS            
000011E6  1A3C 0001                189              MOVE.B  #1,D5      
000011EA  3E18                     190              MOVE.W  (A0)+,D7           
000011EC  264A                     191              MOVEA.L A2,A3                             
000011EE  4EB9 000011FA            192              JSR     getOp              
000011F4                           193  
000011F4  4CDF 70DF                194  opReturn    MOVEM.L (SP)+,D6-D7/D0-D4/A4-A6 
000011F8  4E75                     195              RTS              
000011FA                           196              
000011FA  3C07                     197  getOp       MOVE.W  D7,D6              
000011FC  183C 000C                198              MOVE.B  #shift12bits,D4        
00001200  E86E                     199              LSR.W   D4,D6               
00001202  CCFC 0006                200              MULU    #6,D6                          
00001206  4BF9 00001212            201              LEA     jmp_table,A5                                                                                            
0000120C  4EB5 6000                202              JSR     00(A5,D6)         
00001210  4E75                     203              RTS
00001212                           204  
00001212                           205  jmp_table      
00001212  4EF9 0000125A            206              JMP     hex1_0000            
00001218  4EF9 000012B4            207              JMP     hex1_0001            
0000121E                           208              ;JMP     hex1_0010
0000121E  4EF9 0000131A            209              JMP     hex1_0011
00001224  4EF9 000013D4            210              JMP     hex1_0100
0000122A  4EF9 00001438            211              JMP     hex1_0101
00001230  4EF9 00001440            212              JMP     hex1_0110
00001236  4EF9 0000144A            213              JMP     hex1_0111
0000123C                           214              ;JMP     hex1_1000
0000123C  4EF9 00001452            215              JMP     hex1_1001
00001242  4EF9 00001510            216              JMP     hex1_1010
00001248  4EF9 00001518            217              JMP     hex1_1011
0000124E  4EF9 000015CC            218              JMP     hex1_1100
00001254  4EF9 000015FC            219              JMP     hex1_1101
0000125A                           220              ;JMP     hex1_1110
0000125A                           221              ;JMP     hex1_1111
0000125A                           222  
0000125A                           223  ;0000 ORI
0000125A  3C07                     224  hex1_0000   MOVE.W  D7,D6               
0000125C  0246 0F00                225              ANDI.W  #$0F00,D6           
00001260  183C 0008                226              MOVE.B  #shift8bits,D4          
00001264  E8AE                     227              LSR.L   D4,D6               
00001266  BC3C 0000                228              CMP.B   #$0,D6              ; Check if ORI
0000126A  6700 0006                229              BEQ     opORI               ; Jump to opORI section
0000126E  6600 062A                230              BNE     illegalCode                        
00001272                           231  
00001272  14FC 004F                232  opORI       MOVE.B  #'O',(A2)+         
00001276  14FC 0052                233              MOVE.B  #'R',(A2)+
0000127A  14FC 0049                234              MOVE.B  #'I',(A2)+
0000127E  14FC 002E                235              MOVE.B  #'.',(A2)+
00001282  4EB9 0000179A            236              JSR     size2Buffer         
00001288  14FC 0020                237              MOVE.B  #' ',(A2)+
0000128C  14FC 0020                238              MOVE.B  #' ',(A2)+
00001290  14FC 0020                239              MOVE.B  #' ',(A2)+
00001294  14FC 0020                240              MOVE.B  #' ',(A2)+            
00001298  14FC 0023                241              MOVE.B  #'#',(A2)+            
0000129C  4EB9 000017EC            242              JSR     getAddr             
000012A2  14FC 002C                243              MOVE.B  #',',(A2)+          
000012A6  4EB9 0000191E            244              JSR     getEA              
000012AC  4EF9 000012B2            245              JMP     end0000           
000012B2                           246  
000012B2  4E75                     247  end0000     RTS
000012B4                           248              
000012B4                           249  ;0001 MOVEA, MOVE
000012B4  14FC 004D                250  hex1_0001   MOVE.B  #'M',(A2)+          
000012B8  14FC 004F                251              MOVE.B  #'O',(A2)+
000012BC  14FC 0056                252              MOVE.B  #'V',(A2)+
000012C0  14FC 0045                253              MOVE.B  #'E',(A2)+
000012C4  1C07                     254              MOVE.B  D7,D6               
000012C6  EC8E                     255              LSR.L   #6,D6              
000012C8  0246 0007                256              ANDI.W  #$07,D6             
000012CC  BC3C 0001                257              CMP.B   #$1,D6            
000012D0  6600 001C                258              BNE     moveL              
000012D4  14FC 0041                259              MOVE.B  #'A',(A2)+
000012D8  14FC 002E                260              MOVE.B  #'.',(A2)+
000012DC  14FC 004C                261              MOVE.B  #'L',(A2)+
000012E0  14FC 0020                262              MOVE.B  #' ',(A2)+
000012E4  14FC 0020                263              MOVE.B  #' ',(A2)+
000012E8  4EF9 00001302            264              JMP     moveLEA            
000012EE  14FC 002E                265  moveL       MOVE.B  #'.',(A2)+
000012F2  14FC 004C                266              MOVE.B  #'L',(A2)+
000012F6  14FC 0020                267              MOVE.B  #' ',(A2)+
000012FA  14FC 0020                268              MOVE.B  #' ',(A2)+
000012FE  14FC 0020                269              MOVE.B  #' ',(A2)+  
00001302  4EB9 0000191E            270  moveLEA     JSR     getEA           
00001308  14FC 002C                271              MOVE.B  #',',(A2)+
0000130C  4EB9 00001380            272              JSR     swapDestReg 
00001312  4EB9 0000191E            273              JSR     getEA     
00001318  4E75                     274  end0010     RTS
0000131A                           275   
0000131A                           276   
0000131A                           277   
0000131A                           278  ; 0011 MOVE
0000131A  14FC 004D                279  hex1_0011   MOVE.B  #'M',(A2)+         
0000131E  14FC 004F                280              MOVE.B  #'O',(A2)+
00001322  14FC 0056                281              MOVE.B  #'V',(A2)+
00001326  14FC 0045                282              MOVE.B  #'E',(A2)+
0000132A  1C07                     283              MOVE.B  D7,D6               
0000132C  EC8E                     284              LSR.L   #6,D6               ; Get bits 6-8
0000132E  0246 0007                285              ANDI.W  #$07,D6             
00001332  BC3C 0001                286              CMP.B   #$1,D6              
00001336  6600 001C                287              BNE     moveW             
0000133A  14FC 0041                288              MOVE.B  #'A',(A2)+         
0000133E  14FC 002E                289              MOVE.B  #'.',(A2)+
00001342  14FC 0057                290              MOVE.B  #'W',(A2)+
00001346  14FC 0020                291              MOVE.B  #' ',(A2)+
0000134A  14FC 0020                292              MOVE.B  #' ',(A2)+
0000134E  4EF9 00001368            293              JMP     moveWEA            
00001354  14FC 002E                294  moveW       MOVE.B  #'.',(A2)+
00001358  14FC 0057                295              MOVE.B  #'W',(A2)+
0000135C  14FC 0020                296              MOVE.B  #' ',(A2)+
00001360  14FC 0020                297              MOVE.B  #' ',(A2)+
00001364  14FC 0020                298              MOVE.B  #' ',(A2)+  
00001368  4EB9 0000191E            299  moveWEA     JSR     getEA            
0000136E  14FC 002C                300              MOVE.B  #',',(A2)+
00001372  4EB9 00001380            301              JSR     swapDestReg 
00001378  4EB9 0000191E            302              JSR     getEA     
0000137E  4E75                     303  end0011     RTS 
00001380                           304  
00001380  4283                     305  swapDestReg CLR.L   D3                  
00001382  3C07                     306              MOVE.W  D7,D6              
00001384  E04E                     307              LSR.W   #shift8bits,D6        
00001386  E24E                     308              LSR.W   #1,D6               
00001388  0246 0007                309              ANDI.W  #$0007,D6          
0000138C  8646                     310              OR.W    D6,D3              
0000138E  3C07                     311              MOVE.W  D7,D6               
00001390  E64E                     312              LSR.W   #3,D6              
00001392  0246 0038                313              ANDI.W  #$0038,D6          
00001396  8646                     314              OR.W    D6,D3               
00001398  4EB9 000013A2            315              JSR     moveSize            
0000139E  3E03                     316              MOVE.W  D3,D7             
000013A0  4E75                     317              RTS
000013A2                           318              
000013A2  3C07                     319  moveSize    MOVE.W  D7,D6             
000013A4  E04E                     320              LSR.W   #shift8bits,D6       
000013A6  E84E                     321              LSR.W   #shift4bits,D6          
000013A8  0246 0003                322              ANDI.W  #$0003,D6           
000013AC  BC3C 0001                323              CMP.B   #$1,D6              
000013B0  6700 0020                324              BEQ     mSizeEnd            
000013B4  BC3C 0002                325              CMP.B   #$2,D6             
000013B8  6700 0014                326              BEQ     moveSizeL          
000013BC  BC3C 0003                327              CMP.B   #$3,D6             
000013C0  6600 04D8                328              BNE     illegalCode               
000013C4  0043 0040                329  moveSizeW   ORI.W   #$0040,D3          
000013C8  4EF9 000013D2            330              JMP     mSizeEnd            
000013CE  0043 0080                331  moveSizeL   ORI.W   #$0080,D3          
000013D2  4E75                     332  mSizeEnd    RTS 
000013D4                           333  
000013D4                           334  
000013D4                           335  
000013D4                           336  ; 0100 NOP, MOVEM, LEA
000013D4  3C07                     337  hex1_0100   MOVE.W  D7,D6               
000013D6  0246 0100                338              ANDI.W  #$0100,D6           
000013DA  BC7C 0100                339              CMP.W   #$0100,D6           
000013DE  6700 0022                340              BEQ     opLEA               
000013E2  3C07                     341              MOVE.W  D7,D6              
000013E4  183C 0008                342              MOVE.B  #shift8bits,D4       
000013E8  E86E                     343              LSR.W   D4,D6              
000013EA  0246 000F                344              ANDI.W  #$000F,D6           
000013EE  CCFC 0006                345              MULU    #6,D6              
000013F2  4BF9 000016BA            346              LEA     tbl_0100,A5         
000013F8  4EB5 6000                347              JSR     00(A5,D6)           
000013FC  4EF9 00001436            348              JMP     end0100            
00001402                           349              
00001402  14FC 004C                350  opLEA       MOVE.B  #'L',(A2)+         
00001406  14FC 0045                351              MOVE.B  #'E',(A2)+
0000140A  14FC 0041                352              MOVE.B  #'A',(A2)+
0000140E  14FC 0020                353              MOVE.B  #' ',(A2)+
00001412  14FC 0009                354              MOVE.B  #$09,(A2)+ 
00001416  4EB9 0000191E            355              JSR     getEA             
0000141C  14FC 002C                356              MOVE.B  #',',(A2)+       
00001420  14FC 0041                357              MOVE.B  #'A',(A2)+        
00001424  3C07                     358              MOVE.W  D7,D6              
00001426  183C 0009                359              MOVE.B  #9,D4              
0000142A  E86E                     360              LSR.W   D4,D6             
0000142C  0246 000F                361              ANDI.W  #$000F,D6         
00001430  0606 0030                362              ADD.B   #$30,D6            
00001434  14C6                     363              MOVE.B  D6,(A2)+            
00001436  4E75                     364  end0100     RTS
00001438                           365  
00001438  4EB9 0000189A            366  hex1_0101   JSR     illegalCode         
0000143E  4E75                     367              RTS
00001440                           368              
00001440                           369              ***** MOVEM Command
00001440  4EB9 0000189A            370  hex1_0110   JSR     illegalCode
00001446  5448                     371              ADDQ.W  #2,A0
00001448  4E75                     372              RTS
0000144A                           373  
0000144A  4EB9 0000189A            374  hex1_0111   JSR     illegalCode       
00001450  4E75                     375              RTS
00001452                           376             
00001452                           377  
00001452                           378  
00001452                           379  ; 1001 sub
00001452  14FC 0053                380  hex1_1001   MOVE.B  #'S',(A2)+         
00001456  14FC 0055                381              MOVE.B  #'U',(A2)+
0000145A  14FC 0042                382              MOVE.B  #'B',(A2)+
0000145E  4EB9 00001790            383              JSR     getSize            
00001464  BC3C 0003                384              CMP.B   #%11,D6           
00001468  6600 004E                385              BNE     opSUB              
0000146C  14FC 0041                386              MOVE.B  #'A',(A2)+        
00001470  14FC 002E                387              MOVE.B  #'.',(A2)+
00001474  3C07                     388              MOVE.W  D7,D6              
00001476  E08E                     389              LSR.L   #shift8bits,D6         
00001478  0246 0001                390              ANDI.W  #$0001,D6         
0000147C  BC3C 0001                391              CMP.B   #%1,D6            
00001480  6700 000C                392              BEQ     subaL               
00001484  14FC 0057                393              MOVE.B  #'W',(A2)+        
00001488  4EF9 00001492            394              JMP     opSUBA
0000148E  14FC 004C                395  subaL       MOVE.B  #'L',(A2)+                 
00001492  14FC 0020                396  opSUBA      MOVE.B  #' ',(A2)+
00001496  14FC 0020                397              MOVE.B  #' ',(A2)+
0000149A  14FC 0020                398              MOVE.B  #' ',(A2)+
0000149E                           399  
0000149E  4EB9 0000191E            400              JSR     getEA             
000014A4  14FC 002C                401              MOVE.B  #',',(A2)+
000014A8  14FC 0041                402              MOVE.B  #'A',(A2)+  
000014AC  4EB9 000017D0            403              JSR     highRegBits        
000014B2  4EF9 000016B8            404              JMP     end1101
000014B8                           405              
000014B8  14FC 002E                406  opSUB       MOVE.B  #'.',(A2)+        
000014BC  4EB9 0000179A            407              JSR     size2Buffer         
000014C2  14FC 0020                408              MOVE.B  #' ',(A2)+
000014C6  14FC 0020                409              MOVE.B  #' ',(A2)+
000014CA  14FC 0020                410              MOVE.B  #' ',(A2)+
000014CE  14FC 0020                411              MOVE.B  #' ',(A2)+
000014D2  4EB9 000017E2            412              JSR     getDirBit           
000014D8  BC3C 0000                413              CMP.B   #%0,D6            
000014DC  6600 001C                414              BNE     opSUB01            
000014E0  4EB9 0000191E            415              JSR     getEA            
000014E6  14FC 002C                416              MOVE.B  #',',(A2)+        
000014EA  14FC 0044                417              MOVE.B  #'D',(A2)+         
000014EE  4EB9 000017D0            418              JSR     highRegBits       
000014F4  4EF9 0000150E            419              JMP     end1001            
000014FA                           420              
000014FA  14FC 0044                421  opSUB01     MOVE.B  #'D',(A2)+         
000014FE  4EB9 000017D0            422              JSR     highRegBits      
00001504  14FC 002C                423              MOVE.B  #',',(A2)+        
00001508  4EB9 0000191E            424              JSR     getEA                    
0000150E                           425              
0000150E  4E75                     426  end1001     RTS            
00001510                           427  
00001510  4EB9 0000189A            428  hex1_1010   JSR     illegalCode          
00001516  4E75                     429              RTS
00001518                           430  
00001518                           431  
00001518                           432  
00001518                           433  ;1011 CMP
00001518  4EB9 00001790            434  hex1_1011   JSR     getSize            
0000151E  BC3C 0003                435              CMP.B   #%11,D6           
00001522  6600 005A                436              BNE     opCMPEOR
00001526  14FC 0043                437              MOVE.B  #'C',(A2)+          
0000152A  14FC 004D                438              MOVE.B  #'M',(A2)+
0000152E  14FC 0050                439              MOVE.B  #'P',(A2)+
00001532  14FC 0041                440              MOVE.B  #'A',(A2)+
00001536  14FC 002E                441              MOVE.B  #'.',(A2)+
0000153A  3C07                     442              MOVE.W  D7,D6               
0000153C  E08E                     443              LSR.L   #shift8bits,D6        
0000153E  0246 0001                444              ANDI.W  #$0001,D6           
00001542  BC3C 0001                445              CMP.B   #%1,D6              
00001546  6700 000C                446              BEQ     cmpaL              
0000154A  14FC 0057                447              MOVE.B  #'W',(A2)+          
0000154E  4EF9 00001558            448              JMP     opCMPA              
00001554  14FC 004C                449  cmpaL       MOVE.B  #'L',(A2)+                 
00001558  14FC 0020                450  opCMPA      MOVE.B  #' ',(A2)+
0000155C  14FC 0020                451              MOVE.B  #' ',(A2)+
00001560  14FC 0020                452              MOVE.B  #' ',(A2)+
00001564                           453  
00001564  4EB9 0000191E            454              JSR     getEA               
0000156A  14FC 002C                455              MOVE.B  #',',(A2)+
0000156E  14FC 0041                456              MOVE.B  #'A',(A2)+
00001572  4EB9 000017D0            457              JSR     highRegBits         
00001578  4EF9 000015CA            458              JMP     end1011             
0000157E                           459              
0000157E  3C07                     460  opCMPEOR    MOVE.W  D7,D6              
00001580  4EB9 000017E2            461              JSR     getDirBit           
00001586  BC3C 0000                462              CMP.B   #%0,D6             
0000158A                           463                     
0000158A  14FC 0043                464  opCMP       MOVE.B  #'C',(A2)+          
0000158E  14FC 004D                465              MOVE.B  #'M',(A2)+
00001592  14FC 0050                466              MOVE.B  #'P',(A2)+
00001596  14FC 002E                467              MOVE.B  #'.',(A2)+
0000159A  4EB9 0000179A            468              JSR     size2Buffer         
000015A0  14FC 0020                469              MOVE.B  #' ',(A2)+
000015A4  14FC 0020                470              MOVE.B  #' ',(A2)+
000015A8  14FC 0020                471              MOVE.B  #' ',(A2)+
000015AC  14FC 0020                472              MOVE.B  #' ',(A2)+
000015B0  4EB9 0000191E            473              JSR     getEA               
000015B6  14FC 002C                474              MOVE.B  #',',(A2)+
000015BA  14FC 0044                475              MOVE.B  #'D',(A2)+  
000015BE  4EB9 000017D0            476              JSR     highRegBits        
000015C4  4EF9 000015CA            477              JMP     end1011             
000015CA                           478        
000015CA                           479  
000015CA  4E75                     480  end1011     RTS
000015CC                           481  
000015CC                           482  
000015CC                           483  
000015CC                           484  
000015CC                           485  
000015CC  3C07                     486  hex1_1100   MOVE.W  D7,D6              
000015CE  EC8E                     487  opMULU      LSR.L   #6,D6             
000015D0  0246 0003                488              ANDI.W  #$3,D6             
000015D4  BC3C 0003                489              CMP.B   #$3,D6             
000015D8  6700 0002                490              BEQ     muluMode           
000015DC  3C07                     491  muluMode    MOVE.W  D7,D6           
000015DE  E68E                     492              LSR.L   #3,D6              
000015E0  0246 0007                493              ANDI.W  #$7,D6             
000015E4  BC3C 0007                494              CMP.B   #$7,D6             
000015E8  6700 0008                495              BEQ     movePTR           
000015EC  4EF9 0000189A            496              JMP     illegalCode     
000015F2                           497  
000015F2  5448                     498  movePTR     ADDQ.W  #2,A0           
000015F4  4EF9 0000189A            499              JMP     illegalCode
000015FA                           500          
000015FA                           501  
000015FA  4E75                     502  end1100     RTS
000015FC                           503  
000015FC  14FC 0041                504  hex1_1101   MOVE.B  #'A',(A2)+        
00001600  14FC 0044                505              MOVE.B  #'D',(A2)+
00001604  14FC 0044                506              MOVE.B  #'D',(A2)+
00001608  4EB9 00001790            507              JSR     getSize            
0000160E  BC3C 0003                508              CMP.B   #%11,D6            
00001612  6600 004E                509              BNE     opADD             
00001616  14FC 0041                510              MOVE.B  #'A',(A2)+          
0000161A  14FC 002E                511              MOVE.B  #'.',(A2)+
0000161E  3C07                     512              MOVE.W  D7,D6               
00001620  E08E                     513              LSR.L   #shift8bits,D6       
00001622  0246 0001                514              ANDI.W  #$0001,D6          
00001626  BC3C 0001                515              CMP.B   #%1,D6              
0000162A  6700 000C                516              BEQ     addaL              
0000162E  14FC 0057                517              MOVE.B  #'W',(A2)+          
00001632  4EF9 0000163C            518              JMP     opADDA
00001638  14FC 004C                519  addaL       MOVE.B  #'L',(A2)+                
0000163C  14FC 0020                520  opADDA      MOVE.B  #' ',(A2)+
00001640  14FC 0020                521              MOVE.B  #' ',(A2)+
00001644  14FC 0020                522              MOVE.B  #' ',(A2)+
00001648                           523  
00001648  4EB9 0000191E            524              JSR     getEA              
0000164E  14FC 002C                525              MOVE.B  #',',(A2)+
00001652  14FC 0041                526              MOVE.B  #'A',(A2)+  
00001656  4EB9 000017D0            527              JSR     highRegBits       
0000165C  4EF9 000016B8            528              JMP     end1101
00001662                           529              
00001662  14FC 002E                530  opADD       MOVE.B  #'.',(A2)+        
00001666  4EB9 0000179A            531              JSR     size2Buffer       
0000166C  14FC 0020                532              MOVE.B  #' ',(A2)+
00001670  14FC 0020                533              MOVE.B  #' ',(A2)+
00001674  14FC 0020                534              MOVE.B  #' ',(A2)+
00001678  14FC 0020                535              MOVE.B  #' ',(A2)+
0000167C  4EB9 000017E2            536              JSR     getDirBit           
00001682  BC3C 0000                537              CMP.B   #%0,D6             
00001686  6600 001C                538              BNE     opADD01             
0000168A  4EB9 0000191E            539              JSR     getEA               
00001690  14FC 002C                540              MOVE.B  #',',(A2)+         
00001694  14FC 0044                541              MOVE.B  #'D',(A2)+          
00001698  4EB9 000017D0            542              JSR     highRegBits        
0000169E  4EF9 000016B8            543              JMP     end1101             
000016A4                           544              
000016A4  14FC 0044                545  opADD01     MOVE.B  #'D',(A2)+          
000016A8  4EB9 000017D0            546              JSR     highRegBits        
000016AE  14FC 002C                547              MOVE.B  #',',(A2)+         
000016B2  4EB9 0000191E            548              JSR     getEA               
000016B8                           549  
000016B8  4E75                     550  end1101     RTS
000016BA                           551  
000016BA                           552  
000016BA                           553  tbl_0100    
000016BA  4EF9 00001702            554              JMP     effectiveAdd_0000            
000016C0  4EF9 0000170A            555              JMP     effectiveAdd_0001            
000016C6                           556              ;JMP     effectiveAdd_0010
000016C6                           557              ;JMP     effectiveAdd_0011
000016C6                           558              ;JMP     effectiveAdd_0100
000016C6  4EF9 0000171A            559              JMP     effectiveAdd_0101
000016CC                           560              ;JMP     effectiveAdd_0110
000016CC  4EF9 00001722            561              JMP     effectiveAdd_0111
000016D2  4EF9 0000172A            562              JMP     effectiveAdd_1000
000016D8  4EF9 00001744            563              JMP     effectiveAdd_1001
000016DE  4EF9 0000174C            564              JMP     effectiveAdd_1010
000016E4  4EF9 00001754            565              JMP     effectiveAdd_1011
000016EA  4EF9 0000175C            566              JMP     effectiveAdd_1100
000016F0  4EF9 00001764            567              JMP     effectiveAdd_1101
000016F6  4EF9 00001774            568              JMP     effectiveAdd_1110
000016FC  4EF9 0000176C            569              JMP     effectiveAdd_1111
00001702                           570              
00001702  4EB9 0000189A            571  effectiveAdd_0000   JSR     illegalCode
00001708  4E75                     572              RTS
0000170A                           573              
0000170A  4EB9 0000189A            574  effectiveAdd_0001   JSR     illegalCode
00001710  4E75                     575              RTS
00001712                           576              
00001712  4EB9 0000189A            577  effectiveAdd_0011   JSR     illegalCode
00001718  4E75                     578              RTS
0000171A                           579                            
0000171A                           580              
0000171A  4EB9 0000189A            581  effectiveAdd_0101   JSR     illegalCode
00001720  4E75                     582              RTS
00001722                           583          
00001722                           584              
00001722  4EB9 0000189A            585  effectiveAdd_0111   JSR     illegalCode
00001728  4E75                     586              RTS
0000172A                           587              
0000172A                           588              
0000172A                           589  ;0100 MOVEM
0000172A  3C07                     590  effectiveAdd_1000   MOVE.W  D7,D6          
0000172C  E88E                     591              LSR.L   #shift4bits,D6     
0000172E  0246 000F                592              ANDI.W  #$000F,D6      
00001732  BC3C 0004                593              CMP.B   #$4,D6         
00001736  6600 0004                594              BNE     opMOVEM       
0000173A                           595  
0000173A  4E75                     596              RTS            
0000173C                           597  
0000173C  4EB9 0000189A            598  opMOVEM     JSR     illegalCode
00001742  4E75                     599              RTS   
00001744                           600  
00001744  4EB9 0000189A            601  effectiveAdd_1001   JSR     illegalCode
0000174A  4E75                     602              RTS   
0000174C  4EB9 0000189A            603  effectiveAdd_1010   JSR     illegalCode
00001752  4E75                     604              RTS   
00001754  4EB9 0000189A            605  effectiveAdd_1011   JSR     illegalCode
0000175A  4E75                     606              RTS
0000175C  4EB9 0000189A            607  effectiveAdd_1100   JSR     illegalCode
00001762  4E75                     608              RTS
00001764  4EB9 0000189A            609  effectiveAdd_1101   JSR     illegalCode
0000176A  4E75                     610              RTS
0000176C  4EB9 0000189A            611  effectiveAdd_1111   JSR     illegalCode
00001772  4E75                     612              RTS   
00001774                           613  
00001774                           614  
00001774                           615  ;0100 NOP
00001774  4EB9 00001790            616  effectiveAdd_1110   JSR     getSize            
0000177A  BC3C 0002                617              CMP.B   #%10,D6           
0000177E  6600 011A                618              BNE     illegalCode         
00001782                           619               
00001782  14FC 004E                620              MOVE.B  #'N',(A2)+        
00001786  14FC 004F                621              MOVE.B  #'O',(A2)+
0000178A  14FC 0050                622              MOVE.B  #'P',(A2)+
0000178E  4E75                     623              RTS
00001790                           624  
00001790  3C07                     625  getSize     MOVE.W  D7,D6            
00001792  EC4E                     626              LSR.W   #6,D6              
00001794  0246 0003                627              ANDI.W  #$0003,D6         
00001798  4E75                     628              RTS
0000179A                           629  
0000179A  4EB8 1790                630  size2Buffer JSR     getSize            
0000179E  BC3C 0000                631              CMP.B   #%00,D6             
000017A2  6700 001C                632              BEQ     addBToBuffer              
000017A6  BC3C 0001                633              CMP.B   #%01,D6            
000017AA  6700 001E                634              BEQ     addWToBuffer             
000017AE  BC3C 0002                635              CMP.B   #%10,D6             
000017B2  6600 00E6                636              BNE     illegalCode           
000017B6                           637        
000017B6  14FC 004C                638              MOVE.B  #'L',(A2)+          
000017BA  4EF9 000017CE            639              JMP     mainEnd             
000017C0                           640              
000017C0  14FC 0042                641  addBToBuffer       MOVE.B  #'B',(A2)+        
000017C4  4EF9 000017CE            642                      JMP     mainEnd             
000017CA                           643              
000017CA  14FC 0057                644  addWToBuffer       MOVE.B  #'W',(A2)+      
000017CE  4E75                     645  mainEnd     RTS                                            
000017D0                           646  
000017D0  3C07                     647  highRegBits MOVE.W  D7,D6               
000017D2  E08E                     648              LSR.L   #shift8bits,D6        
000017D4  E28E                     649              LSR.L   #1,D6              
000017D6  0206 0007                650              ANDI.B  #$7,D6            
000017DA  0606 0030                651              ADD.B   #$30,D6           
000017DE  14C6                     652              MOVE.B  D6,(A2)+          
000017E0  4E75                     653              RTS
000017E2                           654  
000017E2  3C07                     655  getDirBit   MOVE.W  D7,D6              
000017E4  E08E                     656              LSR.L   #shift8bits,D6        
000017E6  0206 0001                657              ANDI.B  #01,D6              
000017EA  4E75                     658              RTS  
000017EC                           659              
000017EC  BC3C 0000                660  getAddr     CMP.B   #%00,D6            
000017F0  6700 0244                661              BEQ     putbytebuffer        
000017F4  BC3C 0001                662              CMP.B   #%01,D6            
000017F8  6700 024A                663              BEQ     putWordBuffer        
000017FC  BC3C 0002                664              CMP.B   #%10,D6            
00001800  6700 025A                665              BEQ     putLongBuffer         
00001804  4E75                     666              RTS
00001806                           667  
00001806  4EB9 00001864            668  getLong     JSR     cmdSh1            
0000180C  183C 000C                669              MOVE.B  #shift12bits,D4      
00001810  4EB9 0000186C            670              JSR     cmdSh2            
00001816  183C 0008                671              MOVE.B  #shift8bits,D4       
0000181A  4EB9 0000186C            672              JSR     cmdSh2             
00001820  183C 0004                673              MOVE.B  #shift4bits,D4         
00001824  4EB9 0000186C            674              JSR     cmdSh2             
0000182A  183C 0000                675              MOVE.B  #0,D4
0000182E  4EB9 00001886            676              JSR     cmdSh4             
00001834  183C 000C                677              MOVE.B  #shift12bits,D4        
00001838  4EB9 00001886            678              JSR     cmdSh4              
0000183E  183C 0008                679              MOVE.B  #shift8bits,D4         
00001842  4EB9 00001886            680              JSR     cmdSh4           
00001848  183C 0004                681              MOVE.B  #shift4bits,D4        
0000184C  4EB9 00001886            682              JSR     cmdSh4             
00001852  183C 0000                683              MOVE.B  #0,D4              
00001856  E8AE                     684              LSR.L   D4,D6               
00001858  0286 0000000F            685              ANDI.L  #$0000000F,D6      
0000185E  4EB9 00001906            686              JSR     converToHex           
00001864                           687  
00001864  7C00                     688  cmdSh1      MOVEQ   #$0,D6             
00001866  2C08                     689              MOVE.L  A0,D6              
00001868  4846                     690              SWAP    D6                 
0000186A  4E75                     691              RTS
0000186C                           692  
0000186C  E8AE                     693  cmdSh2      LSR.L   D4,D6               
0000186E  0286 0000000F            694              ANDI.L  #$0000000F,D6      
00001874  4EB9 00001906            695              JSR     converToHex          
0000187A  4EB8 1864                696              JSR     cmdSh1             
0000187E  4E75                     697              RTS
00001880                           698  
00001880  7C00                     699  cmdSh3      MOVEQ   #$0,D6              
00001882  2C08                     700              MOVE.L  A0,D6               
00001884  4E75                     701              RTS
00001886                           702              
00001886  E8AE                     703  cmdSh4      LSR.L   D4,D6              
00001888  0286 0000000F            704              ANDI.L  #$0000000F,D6       
0000188E  4EB9 00001906            705              JSR     converToHex         
00001894  4EB8 1880                706              JSR     cmdSh3             
00001898  4E75                     707              RTS
0000189A                           708              
0000189A  1A3C 0000                709  illegalCode     MOVE.B  #0,D5         
0000189E  244B                     710              MOVEA.L A3,A2               
000018A0  14FC 0044                711              MOVE.B  #'D',(A2)+          
000018A4  14FC 0041                712              MOVE.B  #'A',(A2)+
000018A8  14FC 0054                713              MOVE.B  #'T',(A2)+
000018AC  14FC 0041                714              MOVE.B  #'A',(A2)+
000018B0  14FC 0009                715              MOVE.B  #$09,(A2)+
000018B4  14FC 0024                716              MOVE.B  #'$',(A2)+          
000018B8  4EB9 000018C0            717              JSR     loadDataBuffer          
000018BE  4E75                     718              RTS          
000018C0                           719  
000018C0  7C00                     720  loadDataBuffer      MOVEQ   #$0,D6              
000018C2  3C07                     721                      MOVE.W  D7,D6               
000018C4  183C 000C                722                      MOVE.B  #shift12bits,D4         
000018C8  E8AE                     723                      LSR.L   D4,D6               
000018CA  0246 000F                724                      ANDI.W  #$000F,D6           
000018CE  4EB9 00001906            725                      JSR     converToHex           
000018D4  3C07                     726                      MOVE.W  D7,D6
000018D6  183C 0008                727                      MOVE.B  #shift8bits,D4
000018DA  E8AE                     728                      LSR.L   D4,D6
000018DC  0246 000F                729                      ANDI.W  #$000F,D6
000018E0  4EB9 00001906            730                      JSR     converToHex           
000018E6  3C07                     731                      MOVE.W  D7,D6
000018E8  183C 0004                732                      MOVE.B  #shift4bits,D4
000018EC  E8AE                     733                      LSR.L   D4,D6
000018EE  0246 000F                734                      ANDI.W  #$000F,D6
000018F2  4EB9 00001906            735                      JSR     converToHex           
000018F8  3C07                     736                      MOVE.W  D7,D6
000018FA  0246 000F                737                      ANDI.W  #$000F,D6
000018FE  4EB9 00001906            738                      JSR     converToHex           
00001904  4E75                     739                      RTS
00001906                           740             
00001906                           741  
00001906                           742  ; Convert hex to ascii
00001906  BC3C 000A                743  converToHex   CMP.B   #$A,D6             
0000190A  6C00 000A                744              BGE     letter              
0000190E  0606 0030                745              ADDI.B  #$30,D6             
00001912  6000 0006                746              BRA hexToBuffer
00001916                           747              
00001916  0606 0037                748  letter      ADDI.B  #$37,D6
0000191A  14C6                     749  hexToBuffer MOVE.B D6, (A2)+
0000191C  4E75                     750              RTS
0000191E                           751              
0000191E                           752  getEA       
0000191E  4BF9 00001948            753              LEA         ea_mode_table,A5 
00001924  4282                     754              CLR.L   D2
00001926  4283                     755              CLR.L   D3
00001928  4284                     756              CLR.L   D4           
0000192A  4286                     757              CLR.L   D6
0000192C  3C07                     758              MOVE.W  D7,D6                 
0000192E  0246 003F                759              ANDI.W  #$003F,D6            
00001932  123C 0003                760              MOVE.B      #3,D1                       
00001936  E26E                     761              LSR.W       D1,D6                       
00001938                           762  
00001938  CCFC 0006                763              MULU      #6,D6                     
0000193C  4EB5 6000                764              JSR         00(A5,D6)               
00001940                           765  
00001940  4E75                     766              RTS                                
00001942  4EF9 000040CC            767              JMP         END                    
00001948                           768  
00001948                           769  ea_mode_table                             
00001948  4EF9 00001978            770              JMP     EAcode000             ; Data Register Direct (mode 0)
0000194E  4EF9 0000198A            771              JMP     EAcode001             ; Address Register Direct (mode 1)
00001954  4EF9 0000199C            772              JMP     EAcode010             ; Address Register Diret (mode 2)
0000195A  4EF9 000019B6            773              JMP     EAcode011             ; Address Register Indirect with Post Increment (mode 3)
00001960  4EF9 000019D4            774              JMP     EAcode100             ; Address Register Indirect with Pre Decrement (mode 4)
00001966  4EF9 000019F2            775              JMP     EAcode101             ; Absolute Word Address (mode 7 subclass 0)
0000196C  4EF9 000019F6            776              JMP     EAcode110             ; Absolute Long Address (mode 7 subclass 1)
00001972  4EF9 000019FA            777              JMP     EAcode111             ; Immediate Data (mode 7 subclass 4)
00001978                           778  
00001978                           779  EAcode000
00001978  3C07                     780              MOVE.W      D7,D6                 
0000197A  0246 0007                781              ANDI.W      #$7,D6                 
0000197E  14FC 0044                782              MOVE.B      #'D',(A2)+              
00001982  0606 0030                783              ADD.B       #$30,D6                 
00001986  14C6                     784              MOVE.B      D6,(A2)+                            
00001988  4E75                     785              RTS
0000198A                           786   
0000198A                           787  EAcode001
0000198A  3C07                     788              MOVE.W      D7,D6                   
0000198C  0246 0007                789              ANDI.W      #$7,D6                  
00001990  14FC 0041                790              MOVE.B      #'A',(A2)+              
00001994  0606 0030                791              ADD.B       #$30,D6                
00001998  14C6                     792              MOVE.B      D6,(A2)+                
0000199A  4E75                     793              RTS
0000199C                           794  
0000199C                           795  EAcode010
0000199C  3C07                     796              MOVE.W      D7,D6                   
0000199E  0246 0007                797              ANDI.W      #$7,D6                  
000019A2  14FC 0028                798              MOVE.B      #'(',(A2)+                       
000019A6  14FC 0041                799              MOVE.B      #'A',(A2)+              
000019AA  0606 0030                800              ADD.B       #$30,D6                 
000019AE  14C6                     801              MOVE.B      D6,(A2)+                
000019B0  14FC 0029                802              MOVE.B      #')',(A2)+              
000019B4  4E75                     803              RTS
000019B6                           804   
000019B6                           805  EAcode011
000019B6                           806              
000019B6  3C07                     807              MOVE.W      D7,D6                   
000019B8  0246 0007                808              ANDI.W      #$7,D6                  
000019BC  14FC 0028                809              MOVE.B      #'(',(A2)+                      
000019C0  14FC 0041                810              MOVE.B      #'A',(A2)+             
000019C4  0606 0030                811              ADD.B       #$30,D6                 
000019C8  14C6                     812              MOVE.B      D6,(A2)+                
000019CA  14FC 0029                813              MOVE.B      #')',(A2)+              
000019CE  14FC 002B                814              MOVE.B      #'+',(A2)+              
000019D2  4E75                     815              RTS
000019D4                           816  
000019D4  3C07                     817  EAcode100   MOVE.W      D7,D6                   
000019D6  0246 0007                818              ANDI.W      #$7,D6                  
000019DA  14FC 002D                819              MOVE.B      #'-',(A2)+              
000019DE  14FC 0028                820              MOVE.B      #'(',(A2)+                          
000019E2  14FC 0041                821              MOVE.B      #'A',(A2)+              
000019E6  0606 0030                822              ADD.B       #$30,D6                 
000019EA  14C6                     823              MOVE.B      D6,(A2)+                
000019EC  14FC 0029                824              MOVE.B      #')',(A2)+              
000019F0  4E75                     825              RTS                                     
000019F2                           826              
000019F2                           827  EAcode101
000019F2  4EF8 189A                828               JMP    illegalCode          * set bad instruction flag
000019F6                           829  EAcode110
000019F6  4EF8 189A                830              JMP       illegalCode             * set bad instruction flag
000019FA                           831  
000019FA  3C07                     832  EAcode111   MOVE.W D7, D6
000019FC  0246 0007                833              ANDI.W #$07, D6
00001A00  0C06 0000                834              CMPI.B   #$0,D6              
00001A04  6700 003E                835              BEQ      putWordBuffer         
00001A08  0C06 0001                836              CMPI.B   #$1,D6              
00001A0C  6700 004E                837              BEQ      putLongBuffer         
00001A10  0C06 0002                838              CMPI.B   #$2,D6
00001A14  0C06 0002                839              CMPI.B   #$2,D6              
00001A18  6700 0004                840              BEQ      pctobuffer  
00001A1C  4E75                     841              RTS
00001A1E                           842  
00001A1E                           843   
00001A1E                           844  ; Add '(pc)' to buffer
00001A1E                           845  pctobuffer
00001A1E  4EB9 00001A44            846              JSR         putWordBuffer
00001A24  14FC 0028                847              MOVE.B      #'(',(A2)+                        
00001A28  14FC 0050                848              MOVE.B      #'P',(A2)+              
00001A2C  14FC 0043                849              MOVE.B      #'C',(A2)+              
00001A30  14FC 0029                850              MOVE.B      #')',(A2)+                                     
00001A34  4E75                     851              RTS
00001A36                           852  
00001A36                           853  putbytebuffer   
00001A36  14FC 0024                854              MOVE.B  #'$',(A2)+
00001A3A  4284                     855              CLR.L   D4          
00001A3C  3410                     856              MOVE.W  (A0),D2     
00001A3E  4284                     857              CLR.L   D4          
00001A40  183C 0002                858              MOVE.B  #2,D4       
00001A44                           859              
00001A44                           860  putWordBuffer 
00001A44  14FC 0024                861              MOVE.B  #'$',(A2)+  
00001A48  4284                     862              CLR.L   D4          
00001A4A  14FC 0024                863              MOVE.B  #$24,(A2)+  
00001A4E  3410                     864              MOVE.W  (A0),D2       
00001A50  4284                     865              CLR.L   D4          
00001A52  183C 0004                866              MOVE.B  #4,D4       
00001A56                           867             
00001A56  3C07                     868              MOVE.W  D7,D6                
00001A58  5448                     869              ADDQ.W  #2,A0         
00001A5A  4E75                     870              RTS                 
00001A5C                           871  
00001A5C                           872  putLongBuffer
00001A5C  14FC 0024                873              MOVE.B  #'$',(A2)+
00001A60  4284                     874              CLR.L   D4          
00001A62  2410                     875              MOVE.L  (A0),D2     
00001A64  4284                     876              CLR.L   D4          
00001A66  183C 0008                877              MOVE.B  #8,D4      
00001A6A                           878              
00001A6A  3C07                     879              MOVE.W  D7,D6       
00001A6C  5848                     880              ADDQ.W  #4,A0      
00001A6E  4E75                     881              RTS                 
00001A70                           882                     
00004000                           883               ORG   $4000 ; Make sure data starts at $4000
00004000= 48 65 6C 6C 6F 2C ...    884  intro        DC.B    'Hello, please enter beginning and ending addresses',CR,LF
00004034                           885  
00004034= 0034                     886  intro_len   DC.W    intro_len-intro
00004036                           887          
00004036= 45 6E 74 65 72 20 ...    888  string1     DC.B    'Enter start address: $',0
0000404E= 0018                     889  str_len1    DC.W    str_len1-string1  *Get the length of the string
00004050                           890  
00004050= 45 6E 74 65 72 20 ...    891  string2     DC.B    'Enter end address: $',0
00004066= 0016                     892  str_len2    DC.W    str_len2-string2  *Get the length of the string
00004068                           893  
00004068= 50 72 65 73 73 20 ...    894  str_enter   DC.B    'Press enter to read more data',0
00004086= FFE2                     895  str_en_len  DC.W    str_enter-str_en_len
00004088                           896  
00004088= 44 69 73 61 73 73 ...    897  str_more    DC.B    'Disassemble more code? 1 for yes, 0 for no. ',0
000040B6= 002E                     898  strMore_len DC.W    strMore_len-str_more       
000040B8                           899  
000040B8= 43 6C 6F 73 69 6E ...    900  exit        DC.B    'Closing program',0
000040C8= 0010                     901  exit_len    DC.W    exit_len-exit           
000040CA                           902  
000040CA= 01                       903  message_buffer    DC.B   1
000040CB                           904                                   
000040CB                           905  *************************************************************************************************************************
000040CB                           906  * End of program:
000040CB                           907  *************************************************************************************************************************        
000040CC  4E72 2700                908  END         STOP    #$2700
000040D0                           909              END     $1000

No errors detected
No warnings generated


SYMBOL TABLE INFORMATION
Symbol-name         Value
-------------------------
ADDAL               1638
ADDBTOBUFFER        17C0
ADDWTOBUFFER        17CA
ASCIITOHEX          1100
BUFFPREP            1198
CAP_TO_HEX          116C
CLEANUP             1110
CLEARALL            107A
CLEARREGISTERS      108C
CMDSH1              1864
CMDSH2              186C
CMDSH3              1880
CMDSH4              1886
CMPAL               1554
CONVERTOHEX         1906
CR                  D
EACODE000           1978
EACODE001           198A
EACODE010           199C
EACODE011           19B6
EACODE100           19D4
EACODE101           19F2
EACODE110           19F6
EACODE111           19FA
EA_MODE_TABLE       1948
EFFECTIVEADD_0000   1702
EFFECTIVEADD_0001   170A
EFFECTIVEADD_0011   1712
EFFECTIVEADD_0101   171A
EFFECTIVEADD_0111   1722
EFFECTIVEADD_1000   172A
EFFECTIVEADD_1001   1744
EFFECTIVEADD_1010   174C
EFFECTIVEADD_1011   1754
EFFECTIVEADD_1100   175C
EFFECTIVEADD_1101   1764
EFFECTIVEADD_1110   1774
EFFECTIVEADD_1111   176C
END                 40CC
END0000             12B2
END0010             1318
END0011             137E
END0100             1436
END1001             150E
END1011             15CA
END1100             15FA
END1101             16B8
ENDBUFF             11DC
ENDINPUT            10FE
ENDUTIL             109C
EXIT                40B8
EXIT_LEN            40C8
FILL_ADDRESS        118A
FINISH              1180
GETADDR             17EC
GETDIRBIT           17E2
GETEA               191E
GETLONG             1806
GETOP               11FA
GETSIZE             1790
HEX1_0000           125A
HEX1_0001           12B4
HEX1_0011           131A
HEX1_0100           13D4
HEX1_0101           1438
HEX1_0110           1440
HEX1_0111           144A
HEX1_1001           1452
HEX1_1010           1510
HEX1_1011           1518
HEX1_1100           15CC
HEX1_1101           15FC
HEXTOBUFFER         191A
HIGHREGBITS         17D0
ILLEGALCODE         189A
INPUT               109E
INTRO               4000
INTRO_LEN           4034
IN_START            1016
JMP_TABLE           1212
LETTER              1916
LF                  A
LOADDATABUFFER      18C0
LOWER_TO_HEX        1176
MAINEND             17CE
MESSAGE_BUFFER      40CA
MOVEL               12EE
MOVELEA             1302
MOVEPTR             15F2
MOVESIZE            13A2
MOVESIZEL           13CE
MOVESIZEW           13C4
MOVEW               1354
MOVEWEA             1368
MSIZEEND            13D2
MULUMODE            15DC
NUM_TO_HEX          1162
OPADD               1662
OPADD01             16A4
OPADDA              163C
OPCMP               158A
OPCMPA              1558
OPCMPEOR            157E
OPDECODE            11DE
OPLEA               1402
OPMOVEM             173C
OPMULU              15CE
OPORI               1272
OPRETURN            11F4
OPSUB               14B8
OPSUB01             14FA
OPSUBA              1492
PCTOBUFFER          1A1E
PRINTCOUNT          14
PROGRAM_DONE        1066
PUTBYTEBUFFER       1A36
PUTLONGBUFFER       1A5C
PUTWORDBUFFER       1A44
RESUME              114A
SHIFT12BITS         C
SHIFT4BITS          4
SHIFT8BITS          8
SHOW                1052
SIZE2BUFFER         179A
STACK               A000
START               1000
STRING1             4036
STRING2             4050
STRMORE_LEN         40B6
STR_ENTER           4068
STR_EN_LEN          4086
STR_LEN1            404E
STR_LEN2            4066
STR_MORE            4088
SUBAL               148E
SWAPDESTREG         1380
TBL_0100            16BA
